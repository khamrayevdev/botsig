import os
from random import choice, uniform, randint
import asyncio
import datetime

from aiogram import F, Router, types, Bot
from aiogram.filters.command import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from config import BOT_TOKEN
from keyboards.client import ClientKeyboard
from other.filters import  RegisteredFilter
from database.db import DataBase

router = Router()

bot= Bot(token=BOT_TOKEN)

class RegisterState(StatesGroup):
    input_id = State()


class GetSignalStates(StatesGroup):
    chosing_mines = State()


@router.message(CommandStart())
async def start_command(message: types.Message, bot: Bot):
    await DataBase.register(message.from_user.id, verifed="0")
    await message.answer(f"""

Aviator uchun signal botga xush kelibsiz ‚ùóÔ∏è


üöÄAviatorüöÄ ‚Äì yangi avlod o‚Äòyinchilari uchun mos keladigan, eng so‚Äònggi pul ishlash o‚Äòyini.  
Siz bir necha soniya ichida bir necha baravar ko‚Äòproq yutib olishingiz mumkin!  

Bizning botimiz ChatGPT 4.2 neyron tarmog‚Äòi asosida ishlaydi.  
U aviator natijasini 93% aniqlik bilan bashorat qila oladi.  
Bot faqat 5 marta signal beradi !!!
                                  
""",
                        reply_markup=await ClientKeyboard.menu_keyboard(), parse_mode="HTML")



@router.callback_query(F.data.in_(["back"]))
async def menu_output(callback: types.CallbackQuery):
    try:
        await callback.message.delete()
    except:
        pass

    await callback.message.answer(f"""

Aviator uchun signal botga xush kelibsiz ‚ùóÔ∏è


üöÄAviatorüöÄ ‚Äì yangi avlod o‚Äòyinchilari uchun mos keladigan, eng so‚Äònggi pul ishlash o‚Äòyini.  
Siz bir necha soniya ichida bir necha baravar ko‚Äòproq yutib olishingiz mumkin!  

Bizning botimiz ChatGPT 4.2 neyron tarmog‚Äòi asosida ishlaydi.  
U aviator natijasini 93% aniqlik bilan bashorat qila oladi.  
Bot faqat 5 marta signal beradi !!!
                                  
""",
                                  parse_mode="HTML", reply_markup=await ClientKeyboard.menu_keyboard())

    await callback.answer()


@router.callback_query(F.data == "register")
async def register_handler(callback: types.CallbackQuery, state: FSMContext):
    text = f"""
üî∑ Vavada id raqamizni yuboring
üî∑ Id raqam qayerdan topish rasmda ko`rsatilgan.
üî∑ Id raqamni to`liq yuboring"""




    try:
        await callback.message.delete()
    except:
        pass

    await callback.message.answer_photo("https://i.postimg.cc/rFyGnx8Z/id.png", text, parse_mode="HTML", reply_markup=await ClientKeyboard.register_keyboard())
    await state.set_state(RegisterState.input_id)
    



@router.message(RegisterState.input_id)
async def register_handler_finaly(message: types.Message, state: FSMContext):

    try:
        number = message.text

        if len(message.text) >= 8:
            photo = types.FSInputFile("id.jpg")
            await DataBase.update_verifed(message.from_user.id)
            await message.reply("Siz muvofaqiyatli ro`yxatdan o`tdingiz ü•≥", reply_markup=await ClientKeyboard.on_register_keyboard())
            await state.clear()
        else:
            print(message.text)
            await message.answer("Id Raqamingiz xato, qayta urinib ko'ring")
            return

    except Exception as e:
        print(e)
        print(message.text)
        await message.answer("Id Raqamingiz xato, qayta urinib ko'ring")
        return


# @router.callback_query(F.data == "instruction")
# async def instucrion_handler(callback: types.CallbackQuery):
#     text = f"""
# –ë–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –∏ –æ–±—É—á–µ–Ω –Ω–∞ –∫–ª–∞—Å—Ç–µ—Ä–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ üñ• <strong>[ChatGPT 5.0]</strong>.
# –î–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –±–æ—Ç–∞ –±—ã–ª–æ —Å—ã–≥—Ä–∞–Ω–æ üé∞10.000+ –∏–≥—Ä.

# –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–µ–ª–∞—é—Ç –≤ –¥–µ–Ω—å 15-25% –æ—Ç —Å–≤–æ–µ–≥–æ üí∏ –∫–∞–ø–∏—Ç–∞–ª–∞!
# <code>–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –ø–æ —Å–µ–π –¥–µ–Ω—å –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏  –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è! –¢–æ—á–Ω–æ—Å—Ç—å –±–æ—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 92%!</code>
# –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏—Ç–∞ —Å–ª–µ–¥—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:

# üü¢ 1. –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–π –∫–æ–Ω—Ç–æ—Ä–µ <a href="{REF_URL}">1WIN</a>
# –ï—Å–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è - –∑–∞—Ö–æ–¥–∏–º —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º VPN (–®–≤–µ—Ü–∏—è). –í Play Market/App Store –ø–æ–ª–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä: Vpnify, Planet VPN, Hotspot VPN –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ!
# <code>–ë–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø –∫ —Å–∏–≥–Ω–∞–ª–∞–º –Ω–µ –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç!</code>
# üü¢ 2. –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.
# üü¢ 3. –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª 1win games –∏ –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É üöÄ'LUCKYJET'.
# üü¢ 4. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∏–≥–Ω–∞–ª –≤ –±–æ—Ç–µ –∏ –∑–∞–±—Ä–∞—Ç—å —Å–æ–≥–ª–∞—Å–Ω–æ —Å–∏–≥–Ω–∞–ª–∞ –∏–∑ –±–æ—Ç–∞.
# üü¢ 5. –ü—Ä–∏ –Ω–µ—É–¥–∞—á–Ω–æ–º —Å–∏–≥–Ω–∞–ª–µ —Å–æ–≤–µ—Ç—É–µ–º —É–¥–≤–æ–∏—Ç—å(–•¬≤) —Å—Ç–∞–≤–∫—É —á—Ç–æ –±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∫—Ä—ã—Ç—å –ø–æ—Ç–µ—Ä—é –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —Å–∏–≥–Ω–∞–ª–µ."""

#     photo = types.FSInputFile("instruction.jpg")

#     try:
#         await callback.message.delete()
#     except:
#         pass

#     await callback.message.answer_photo(photo, text, reply_markup=await ClientKeyboard.back_keyboard(), parse_mode="HTML")


@router.callback_query(F.data == "get_signal")
async def get_signal_start_handler(callback: types.CallbackQuery, state: FSMContext):
    user_id = callback.from_user.id

    user_data = await DataBase.get_user(user_id)
    
    if user_data:
        await callback.message.answer("Xush kelibsiz! Siz signallardan foydalanishni boshlashingiz mumkin.",
                                      reply_markup=await ClientKeyboard.get_signal_keyboard())
    else:
        await register_handler(callback, state)
